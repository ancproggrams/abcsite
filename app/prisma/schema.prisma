
generator client {
    provider = "prisma-client-js"
    binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
    output = "/home/ubuntu/abcsite_replica/app/node_modules/.prisma/client"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Contact {
  id        String   @id @default(cuid())
  name      String
  email     String
  company   String?
  phone     String?
  message   String
  formType  String   @default("general")
  interest  String?
  createdAt DateTime @default(now())
  
  @@map("contacts")
}

model BlogPost {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  excerpt     String
  content     String
  featuredImage String?
  status      PostStatus @default(DRAFT)
  authorName  String   @default("Marc Ren√©")
  authorEmail String   @default("marc@adviesnconsultancy.nl")
  publishedAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // SEO fields
  metaTitle       String?
  metaDescription String?
  keywords        String?
  
  // Relationships
  categories      BlogCategory[]
  tags            BlogTag[]
  
  // Analytics
  viewCount       Int @default(0)
  shareCount      Int @default(0)
  
  @@map("blog_posts")
}

model BlogCategory {
  id          String   @id @default(cuid())
  name        String   @unique
  slug        String   @unique
  description String?
  color       String   @default("#60B5FF")
  createdAt   DateTime @default(now())
  
  posts       BlogPost[]
  
  @@map("blog_categories")
}

model BlogTag {
  id        String   @id @default(cuid())
  name      String   @unique
  slug      String   @unique
  createdAt DateTime @default(now())
  
  posts     BlogPost[]
  
  @@map("blog_tags")
}

model DownloadResource {
  id          String   @id @default(cuid())
  title       String
  description String
  category    String
  type        String   // PDF, Excel, PowerBI, etc.
  fileUrl     String
  fileName    String
  fileSize    Int?     // in bytes
  downloadCount Int    @default(0)
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("download_resources")
}

model CaseStudy {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  industry    String
  challenge   String
  solution    String
  result      String
  duration    String
  imageUrl    String?
  status      PostStatus @default(DRAFT)
  publishedAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("case_studies")
}

model QuickScanResult {
  id              String   @id @default(cuid())
  // User info
  name            String
  email           String
  company         String
  phone           String?
  position        String?
  
  // BCM specific questions
  hasBcmOfficer   Boolean  // Required question
  hasCrisisTeam   Boolean  // Required question
  
  // ISO 22301 questionnaire responses (JSON)
  responses       Json     // Array of {questionId, score, area}
  
  // Calculated scores per control area
  contextScore           Int    // 1-5
  leadershipScore        Int    // 1-5
  planningScore          Int    // 1-5
  supportScore           Int    // 1-5
  operationScore         Int    // 1-5
  performanceScore       Int    // 1-5
  improvementScore       Int    // 1-5
  
  // Overall assessment
  overallScore           Int    // 1-5
  maturityLevel          String // Basic, Developing, Advanced, Expert
  
  // Report generation
  reportGenerated        Boolean @default(false)
  reportUrl              String?
  
  // Follow-up
  wantsConsultation      Boolean @default(false)
  consultationScheduled  Boolean @default(false)
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@map("quick_scan_results")
}

model NewsletterSubscriber {
  id              String   @id @default(cuid())
  email           String   @unique
  name            String?
  company         String?
  isActive        Boolean  @default(true)
  preferences     String[] // JSON array of preferences
  source          String?  // Where they signed up from
  leadScore       Int      @default(0)
  lastEngagement  DateTime?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@map("newsletter_subscribers")
}

model SocialMediaPost {
  id           String   @id @default(cuid())
  platform     SocialPlatform
  postId       String   // External post ID
  content      String
  url          String
  imageUrl     String?
  publishedAt  DateTime
  engagements  Int      @default(0)
  createdAt    DateTime @default(now())
  
  @@unique([platform, postId])
  @@map("social_media_posts")
}

enum PostStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

enum SocialPlatform {
  LINKEDIN
  TWITTER
  FACEBOOK
}
